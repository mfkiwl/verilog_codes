$date
	Sat Dec 19 23:58:49 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mult_tb $end
$var wire 1 ! dout_valid $end
$var wire 32 " dout [31:0] $end
$var reg 1 # clk $end
$var reg 16 $ din1 [15:0] $end
$var reg 16 % din2 [15:0] $end
$var reg 1 & din_valid $end
$var reg 1 ' rst $end
$var integer 32 ( i [31:0] $end
$scope module mult $end
$var wire 1 # clk $end
$var wire 16 ) din1 [15:0] $end
$var wire 16 * din2 [15:0] $end
$var wire 1 & din_valid $end
$var wire 32 + dout [31:0] $end
$var wire 1 ' rst $end
$var wire 1 ! dout_valid $end
$var reg 16 , din1_reg_0 [15:0] $end
$var reg 16 - din1_reg_1 [15:0] $end
$var reg 16 . din2_reg_0 [15:0] $end
$var reg 16 / din2_reg_1 [15:0] $end
$var reg 32 0 dout_reg_0 [31:0] $end
$var reg 32 1 dout_reg_1 [31:0] $end
$var reg 4 2 dout_valid_r [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b10 *
b1 )
b0 (
0'
0&
b10 %
b1 $
1#
b0 "
0!
$end
#5
0#
#10
1#
b1 (
#15
0#
#20
1#
b10 (
#25
0#
#30
1#
b11 (
#35
0#
#40
b1 2
b10 .
b1 ,
1#
1&
b0 (
#45
0#
#50
b10 /
b1 -
b0 .
b0 ,
b11 2
1#
b1 (
b0 %
b0 *
b0 $
b0 )
#55
0#
#60
b1 .
b1 ,
b111 2
b10 0
b0 /
b0 -
1#
b10 (
b1 %
b1 *
b1 $
b1 )
#65
0#
#70
1!
b10 "
b10 +
b10 1
b0 0
b1 /
b1 -
b10 .
b10 ,
b1111 2
1#
b11 (
b10 %
b10 *
b10 $
b10 )
#75
0#
#80
b11 .
b11 ,
b0 "
b0 +
b0 1
b1 0
b10 /
b10 -
1#
b100 (
b11 %
b11 *
b11 $
b11 )
#85
0#
#90
b1 "
b1 +
b1 1
b100 0
b11 /
b11 -
b100 .
b100 ,
1#
b101 (
b100 %
b100 *
b100 $
b100 )
#95
0#
#100
b101 .
b101 ,
b100 "
b100 +
b100 1
b1001 0
b100 /
b100 -
1#
b110 (
b101 %
b101 *
b101 $
b101 )
#105
0#
#110
b1001 "
b1001 +
b1001 1
b10000 0
b101 /
b101 -
b110 .
b110 ,
1#
b111 (
b110 %
b110 *
b110 $
b110 )
#115
0#
#120
b111 .
b111 ,
b10000 "
b10000 +
b10000 1
b11001 0
b110 /
b110 -
1#
b1000 (
b111 %
b111 *
b111 $
b111 )
#125
0#
#130
b11001 "
b11001 +
b11001 1
b100100 0
b111 /
b111 -
b1000 .
b1000 ,
1#
b1001 (
b1000 %
b1000 *
b1000 $
b1000 )
#135
0#
#140
b1001 .
b1001 ,
b100100 "
b100100 +
b100100 1
b110001 0
b1000 /
b1000 -
1#
b1010 (
b1001 %
b1001 *
b1001 $
b1001 )
#145
0#
#150
b110001 "
b110001 +
b110001 1
b1000000 0
b1001 /
b1001 -
b1010 .
b1010 ,
1#
b1011 (
b1010 %
b1010 *
b1010 $
b1010 )
#155
0#
#160
b1011 .
b1011 ,
b1000000 "
b1000000 +
b1000000 1
b1010001 0
b1010 /
b1010 -
1#
b1100 (
b1011 %
b1011 *
b1011 $
b1011 )
#165
0#
#170
b1010001 "
b1010001 +
b1010001 1
b1100100 0
b1011 /
b1011 -
b1100 .
b1100 ,
1#
b1101 (
b1100 %
b1100 *
b1100 $
b1100 )
#175
0#
#180
b1101 .
b1101 ,
b1100100 "
b1100100 +
b1100100 1
b1111001 0
b1100 /
b1100 -
1#
b1110 (
b1101 %
b1101 *
b1101 $
b1101 )
#185
0#
#190
b1111001 "
b1111001 +
b1111001 1
b10010000 0
b1101 /
b1101 -
b1110 .
b1110 ,
1#
b1111 (
b1110 %
b1110 *
b1110 $
b1110 )
#195
0#
#200
b1111 .
b1111 ,
b10010000 "
b10010000 +
b10010000 1
b10101001 0
b1110 /
b1110 -
1#
b10000 (
b1111 %
b1111 *
b1111 $
b1111 )
